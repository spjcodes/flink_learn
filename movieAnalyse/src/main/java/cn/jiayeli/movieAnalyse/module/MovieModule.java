/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package cn.jiayeli.movieAnalyse.module;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MovieModule extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6527579532755094477L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MovieModule\",\"namespace\":\"cn.jiayeli.movieAnalyse.module\",\"fields\":[{\"name\":\"movieId\",\"type\":\"string\"},{\"name\":\"movieTitle\",\"type\":\"string\"},{\"name\":\"releaseDate\",\"type\":\"string\"},{\"name\":\"videoReleaseDate\",\"type\":\"string\"},{\"name\":\"IMDbURL\",\"type\":\"string\"},{\"name\":\"unknown\",\"type\":\"string\"},{\"name\":\"Action\",\"type\":\"string\"},{\"name\":\"Adventure\",\"type\":\"string\"},{\"name\":\"Animation\",\"type\":\"string\"},{\"name\":\"Childrens\",\"type\":\"string\"},{\"name\":\"Comedy\",\"type\":\"string\"},{\"name\":\"Crime\",\"type\":\"string\"},{\"name\":\"Documentary\",\"type\":\"string\"},{\"name\":\"Drama\",\"type\":\"string\"},{\"name\":\"Fantasy\",\"type\":\"string\"},{\"name\":\"FilmNoir\",\"type\":\"string\"},{\"name\":\"Horror\",\"type\":\"string\"},{\"name\":\"Musical\",\"type\":\"string\"},{\"name\":\"Mystery\",\"type\":\"string\"},{\"name\":\"Romance\",\"type\":\"string\"},{\"name\":\"SciFi\",\"type\":\"string\"},{\"name\":\"Thriller\",\"type\":\"string\"},{\"name\":\"War\",\"type\":\"string\"},{\"name\":\"Western\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MovieModule> ENCODER =
      new BinaryMessageEncoder<MovieModule>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MovieModule> DECODER =
      new BinaryMessageDecoder<MovieModule>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MovieModule> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MovieModule> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MovieModule>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MovieModule to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MovieModule from a ByteBuffer. */
  public static MovieModule fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String movieId;
  @Deprecated public java.lang.String movieTitle;
  @Deprecated public java.lang.String releaseDate;
  @Deprecated public java.lang.String videoReleaseDate;
  @Deprecated public java.lang.String IMDbURL;
  @Deprecated public java.lang.String unknown;
  @Deprecated public java.lang.String Action;
  @Deprecated public java.lang.String Adventure;
  @Deprecated public java.lang.String Animation;
  @Deprecated public java.lang.String Childrens;
  @Deprecated public java.lang.String Comedy;
  @Deprecated public java.lang.String Crime;
  @Deprecated public java.lang.String Documentary;
  @Deprecated public java.lang.String Drama;
  @Deprecated public java.lang.String Fantasy;
  @Deprecated public java.lang.String FilmNoir;
  @Deprecated public java.lang.String Horror;
  @Deprecated public java.lang.String Musical;
  @Deprecated public java.lang.String Mystery;
  @Deprecated public java.lang.String Romance;
  @Deprecated public java.lang.String SciFi;
  @Deprecated public java.lang.String Thriller;
  @Deprecated public java.lang.String War;
  @Deprecated public java.lang.String Western;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MovieModule() {}

  /**
   * All-args constructor.
   * @param movieId The new value for movieId
   * @param movieTitle The new value for movieTitle
   * @param releaseDate The new value for releaseDate
   * @param videoReleaseDate The new value for videoReleaseDate
   * @param IMDbURL The new value for IMDbURL
   * @param unknown The new value for unknown
   * @param Action The new value for Action
   * @param Adventure The new value for Adventure
   * @param Animation The new value for Animation
   * @param Childrens The new value for Childrens
   * @param Comedy The new value for Comedy
   * @param Crime The new value for Crime
   * @param Documentary The new value for Documentary
   * @param Drama The new value for Drama
   * @param Fantasy The new value for Fantasy
   * @param FilmNoir The new value for FilmNoir
   * @param Horror The new value for Horror
   * @param Musical The new value for Musical
   * @param Mystery The new value for Mystery
   * @param Romance The new value for Romance
   * @param SciFi The new value for SciFi
   * @param Thriller The new value for Thriller
   * @param War The new value for War
   * @param Western The new value for Western
   */
  public MovieModule(java.lang.String movieId, java.lang.String movieTitle, java.lang.String releaseDate, java.lang.String videoReleaseDate, java.lang.String IMDbURL, java.lang.String unknown, java.lang.String Action, java.lang.String Adventure, java.lang.String Animation, java.lang.String Childrens, java.lang.String Comedy, java.lang.String Crime, java.lang.String Documentary, java.lang.String Drama, java.lang.String Fantasy, java.lang.String FilmNoir, java.lang.String Horror, java.lang.String Musical, java.lang.String Mystery, java.lang.String Romance, java.lang.String SciFi, java.lang.String Thriller, java.lang.String War, java.lang.String Western) {
    this.movieId = movieId;
    this.movieTitle = movieTitle;
    this.releaseDate = releaseDate;
    this.videoReleaseDate = videoReleaseDate;
    this.IMDbURL = IMDbURL;
    this.unknown = unknown;
    this.Action = Action;
    this.Adventure = Adventure;
    this.Animation = Animation;
    this.Childrens = Childrens;
    this.Comedy = Comedy;
    this.Crime = Crime;
    this.Documentary = Documentary;
    this.Drama = Drama;
    this.Fantasy = Fantasy;
    this.FilmNoir = FilmNoir;
    this.Horror = Horror;
    this.Musical = Musical;
    this.Mystery = Mystery;
    this.Romance = Romance;
    this.SciFi = SciFi;
    this.Thriller = Thriller;
    this.War = War;
    this.Western = Western;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return movieId;
    case 1: return movieTitle;
    case 2: return releaseDate;
    case 3: return videoReleaseDate;
    case 4: return IMDbURL;
    case 5: return unknown;
    case 6: return Action;
    case 7: return Adventure;
    case 8: return Animation;
    case 9: return Childrens;
    case 10: return Comedy;
    case 11: return Crime;
    case 12: return Documentary;
    case 13: return Drama;
    case 14: return Fantasy;
    case 15: return FilmNoir;
    case 16: return Horror;
    case 17: return Musical;
    case 18: return Mystery;
    case 19: return Romance;
    case 20: return SciFi;
    case 21: return Thriller;
    case 22: return War;
    case 23: return Western;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: movieId = (java.lang.String)value$; break;
    case 1: movieTitle = (java.lang.String)value$; break;
    case 2: releaseDate = (java.lang.String)value$; break;
    case 3: videoReleaseDate = (java.lang.String)value$; break;
    case 4: IMDbURL = (java.lang.String)value$; break;
    case 5: unknown = (java.lang.String)value$; break;
    case 6: Action = (java.lang.String)value$; break;
    case 7: Adventure = (java.lang.String)value$; break;
    case 8: Animation = (java.lang.String)value$; break;
    case 9: Childrens = (java.lang.String)value$; break;
    case 10: Comedy = (java.lang.String)value$; break;
    case 11: Crime = (java.lang.String)value$; break;
    case 12: Documentary = (java.lang.String)value$; break;
    case 13: Drama = (java.lang.String)value$; break;
    case 14: Fantasy = (java.lang.String)value$; break;
    case 15: FilmNoir = (java.lang.String)value$; break;
    case 16: Horror = (java.lang.String)value$; break;
    case 17: Musical = (java.lang.String)value$; break;
    case 18: Mystery = (java.lang.String)value$; break;
    case 19: Romance = (java.lang.String)value$; break;
    case 20: SciFi = (java.lang.String)value$; break;
    case 21: Thriller = (java.lang.String)value$; break;
    case 22: War = (java.lang.String)value$; break;
    case 23: Western = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'movieId' field.
   * @return The value of the 'movieId' field.
   */
  public java.lang.String getMovieId() {
    return movieId;
  }

  /**
   * Sets the value of the 'movieId' field.
   * @param value the value to set.
   */
  public void setMovieId(java.lang.String value) {
    this.movieId = value;
  }

  /**
   * Gets the value of the 'movieTitle' field.
   * @return The value of the 'movieTitle' field.
   */
  public java.lang.String getMovieTitle() {
    return movieTitle;
  }

  /**
   * Sets the value of the 'movieTitle' field.
   * @param value the value to set.
   */
  public void setMovieTitle(java.lang.String value) {
    this.movieTitle = value;
  }

  /**
   * Gets the value of the 'releaseDate' field.
   * @return The value of the 'releaseDate' field.
   */
  public java.lang.String getReleaseDate() {
    return releaseDate;
  }

  /**
   * Sets the value of the 'releaseDate' field.
   * @param value the value to set.
   */
  public void setReleaseDate(java.lang.String value) {
    this.releaseDate = value;
  }

  /**
   * Gets the value of the 'videoReleaseDate' field.
   * @return The value of the 'videoReleaseDate' field.
   */
  public java.lang.String getVideoReleaseDate() {
    return videoReleaseDate;
  }

  /**
   * Sets the value of the 'videoReleaseDate' field.
   * @param value the value to set.
   */
  public void setVideoReleaseDate(java.lang.String value) {
    this.videoReleaseDate = value;
  }

  /**
   * Gets the value of the 'IMDbURL' field.
   * @return The value of the 'IMDbURL' field.
   */
  public java.lang.String getIMDbURL() {
    return IMDbURL;
  }

  /**
   * Sets the value of the 'IMDbURL' field.
   * @param value the value to set.
   */
  public void setIMDbURL(java.lang.String value) {
    this.IMDbURL = value;
  }

  /**
   * Gets the value of the 'unknown' field.
   * @return The value of the 'unknown' field.
   */
  public java.lang.String getUnknown() {
    return unknown;
  }

  /**
   * Sets the value of the 'unknown' field.
   * @param value the value to set.
   */
  public void setUnknown(java.lang.String value) {
    this.unknown = value;
  }

  /**
   * Gets the value of the 'Action' field.
   * @return The value of the 'Action' field.
   */
  public java.lang.String getAction() {
    return Action;
  }

  /**
   * Sets the value of the 'Action' field.
   * @param value the value to set.
   */
  public void setAction(java.lang.String value) {
    this.Action = value;
  }

  /**
   * Gets the value of the 'Adventure' field.
   * @return The value of the 'Adventure' field.
   */
  public java.lang.String getAdventure() {
    return Adventure;
  }

  /**
   * Sets the value of the 'Adventure' field.
   * @param value the value to set.
   */
  public void setAdventure(java.lang.String value) {
    this.Adventure = value;
  }

  /**
   * Gets the value of the 'Animation' field.
   * @return The value of the 'Animation' field.
   */
  public java.lang.String getAnimation() {
    return Animation;
  }

  /**
   * Sets the value of the 'Animation' field.
   * @param value the value to set.
   */
  public void setAnimation(java.lang.String value) {
    this.Animation = value;
  }

  /**
   * Gets the value of the 'Childrens' field.
   * @return The value of the 'Childrens' field.
   */
  public java.lang.String getChildrens() {
    return Childrens;
  }

  /**
   * Sets the value of the 'Childrens' field.
   * @param value the value to set.
   */
  public void setChildrens(java.lang.String value) {
    this.Childrens = value;
  }

  /**
   * Gets the value of the 'Comedy' field.
   * @return The value of the 'Comedy' field.
   */
  public java.lang.String getComedy() {
    return Comedy;
  }

  /**
   * Sets the value of the 'Comedy' field.
   * @param value the value to set.
   */
  public void setComedy(java.lang.String value) {
    this.Comedy = value;
  }

  /**
   * Gets the value of the 'Crime' field.
   * @return The value of the 'Crime' field.
   */
  public java.lang.String getCrime() {
    return Crime;
  }

  /**
   * Sets the value of the 'Crime' field.
   * @param value the value to set.
   */
  public void setCrime(java.lang.String value) {
    this.Crime = value;
  }

  /**
   * Gets the value of the 'Documentary' field.
   * @return The value of the 'Documentary' field.
   */
  public java.lang.String getDocumentary() {
    return Documentary;
  }

  /**
   * Sets the value of the 'Documentary' field.
   * @param value the value to set.
   */
  public void setDocumentary(java.lang.String value) {
    this.Documentary = value;
  }

  /**
   * Gets the value of the 'Drama' field.
   * @return The value of the 'Drama' field.
   */
  public java.lang.String getDrama() {
    return Drama;
  }

  /**
   * Sets the value of the 'Drama' field.
   * @param value the value to set.
   */
  public void setDrama(java.lang.String value) {
    this.Drama = value;
  }

  /**
   * Gets the value of the 'Fantasy' field.
   * @return The value of the 'Fantasy' field.
   */
  public java.lang.String getFantasy() {
    return Fantasy;
  }

  /**
   * Sets the value of the 'Fantasy' field.
   * @param value the value to set.
   */
  public void setFantasy(java.lang.String value) {
    this.Fantasy = value;
  }

  /**
   * Gets the value of the 'FilmNoir' field.
   * @return The value of the 'FilmNoir' field.
   */
  public java.lang.String getFilmNoir() {
    return FilmNoir;
  }

  /**
   * Sets the value of the 'FilmNoir' field.
   * @param value the value to set.
   */
  public void setFilmNoir(java.lang.String value) {
    this.FilmNoir = value;
  }

  /**
   * Gets the value of the 'Horror' field.
   * @return The value of the 'Horror' field.
   */
  public java.lang.String getHorror() {
    return Horror;
  }

  /**
   * Sets the value of the 'Horror' field.
   * @param value the value to set.
   */
  public void setHorror(java.lang.String value) {
    this.Horror = value;
  }

  /**
   * Gets the value of the 'Musical' field.
   * @return The value of the 'Musical' field.
   */
  public java.lang.String getMusical() {
    return Musical;
  }

  /**
   * Sets the value of the 'Musical' field.
   * @param value the value to set.
   */
  public void setMusical(java.lang.String value) {
    this.Musical = value;
  }

  /**
   * Gets the value of the 'Mystery' field.
   * @return The value of the 'Mystery' field.
   */
  public java.lang.String getMystery() {
    return Mystery;
  }

  /**
   * Sets the value of the 'Mystery' field.
   * @param value the value to set.
   */
  public void setMystery(java.lang.String value) {
    this.Mystery = value;
  }

  /**
   * Gets the value of the 'Romance' field.
   * @return The value of the 'Romance' field.
   */
  public java.lang.String getRomance() {
    return Romance;
  }

  /**
   * Sets the value of the 'Romance' field.
   * @param value the value to set.
   */
  public void setRomance(java.lang.String value) {
    this.Romance = value;
  }

  /**
   * Gets the value of the 'SciFi' field.
   * @return The value of the 'SciFi' field.
   */
  public java.lang.String getSciFi() {
    return SciFi;
  }

  /**
   * Sets the value of the 'SciFi' field.
   * @param value the value to set.
   */
  public void setSciFi(java.lang.String value) {
    this.SciFi = value;
  }

  /**
   * Gets the value of the 'Thriller' field.
   * @return The value of the 'Thriller' field.
   */
  public java.lang.String getThriller() {
    return Thriller;
  }

  /**
   * Sets the value of the 'Thriller' field.
   * @param value the value to set.
   */
  public void setThriller(java.lang.String value) {
    this.Thriller = value;
  }

  /**
   * Gets the value of the 'War' field.
   * @return The value of the 'War' field.
   */
  public java.lang.String getWar() {
    return War;
  }

  /**
   * Sets the value of the 'War' field.
   * @param value the value to set.
   */
  public void setWar(java.lang.String value) {
    this.War = value;
  }

  /**
   * Gets the value of the 'Western' field.
   * @return The value of the 'Western' field.
   */
  public java.lang.String getWestern() {
    return Western;
  }

  /**
   * Sets the value of the 'Western' field.
   * @param value the value to set.
   */
  public void setWestern(java.lang.String value) {
    this.Western = value;
  }

  /**
   * Creates a new MovieModule RecordBuilder.
   * @return A new MovieModule RecordBuilder
   */
  public static cn.jiayeli.movieAnalyse.module.MovieModule.Builder newBuilder() {
    return new cn.jiayeli.movieAnalyse.module.MovieModule.Builder();
  }

  /**
   * Creates a new MovieModule RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MovieModule RecordBuilder
   */
  public static cn.jiayeli.movieAnalyse.module.MovieModule.Builder newBuilder(cn.jiayeli.movieAnalyse.module.MovieModule.Builder other) {
    return new cn.jiayeli.movieAnalyse.module.MovieModule.Builder(other);
  }

  /**
   * Creates a new MovieModule RecordBuilder by copying an existing MovieModule instance.
   * @param other The existing instance to copy.
   * @return A new MovieModule RecordBuilder
   */
  public static cn.jiayeli.movieAnalyse.module.MovieModule.Builder newBuilder(cn.jiayeli.movieAnalyse.module.MovieModule other) {
    return new cn.jiayeli.movieAnalyse.module.MovieModule.Builder(other);
  }

  /**
   * RecordBuilder for MovieModule instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MovieModule>
    implements org.apache.avro.data.RecordBuilder<MovieModule> {

    private java.lang.String movieId;
    private java.lang.String movieTitle;
    private java.lang.String releaseDate;
    private java.lang.String videoReleaseDate;
    private java.lang.String IMDbURL;
    private java.lang.String unknown;
    private java.lang.String Action;
    private java.lang.String Adventure;
    private java.lang.String Animation;
    private java.lang.String Childrens;
    private java.lang.String Comedy;
    private java.lang.String Crime;
    private java.lang.String Documentary;
    private java.lang.String Drama;
    private java.lang.String Fantasy;
    private java.lang.String FilmNoir;
    private java.lang.String Horror;
    private java.lang.String Musical;
    private java.lang.String Mystery;
    private java.lang.String Romance;
    private java.lang.String SciFi;
    private java.lang.String Thriller;
    private java.lang.String War;
    private java.lang.String Western;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(cn.jiayeli.movieAnalyse.module.MovieModule.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.movieId)) {
        this.movieId = data().deepCopy(fields()[0].schema(), other.movieId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.movieTitle)) {
        this.movieTitle = data().deepCopy(fields()[1].schema(), other.movieTitle);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.releaseDate)) {
        this.releaseDate = data().deepCopy(fields()[2].schema(), other.releaseDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.videoReleaseDate)) {
        this.videoReleaseDate = data().deepCopy(fields()[3].schema(), other.videoReleaseDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.IMDbURL)) {
        this.IMDbURL = data().deepCopy(fields()[4].schema(), other.IMDbURL);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.unknown)) {
        this.unknown = data().deepCopy(fields()[5].schema(), other.unknown);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Action)) {
        this.Action = data().deepCopy(fields()[6].schema(), other.Action);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Adventure)) {
        this.Adventure = data().deepCopy(fields()[7].schema(), other.Adventure);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Animation)) {
        this.Animation = data().deepCopy(fields()[8].schema(), other.Animation);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.Childrens)) {
        this.Childrens = data().deepCopy(fields()[9].schema(), other.Childrens);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.Comedy)) {
        this.Comedy = data().deepCopy(fields()[10].schema(), other.Comedy);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.Crime)) {
        this.Crime = data().deepCopy(fields()[11].schema(), other.Crime);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.Documentary)) {
        this.Documentary = data().deepCopy(fields()[12].schema(), other.Documentary);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.Drama)) {
        this.Drama = data().deepCopy(fields()[13].schema(), other.Drama);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.Fantasy)) {
        this.Fantasy = data().deepCopy(fields()[14].schema(), other.Fantasy);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.FilmNoir)) {
        this.FilmNoir = data().deepCopy(fields()[15].schema(), other.FilmNoir);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.Horror)) {
        this.Horror = data().deepCopy(fields()[16].schema(), other.Horror);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.Musical)) {
        this.Musical = data().deepCopy(fields()[17].schema(), other.Musical);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.Mystery)) {
        this.Mystery = data().deepCopy(fields()[18].schema(), other.Mystery);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.Romance)) {
        this.Romance = data().deepCopy(fields()[19].schema(), other.Romance);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.SciFi)) {
        this.SciFi = data().deepCopy(fields()[20].schema(), other.SciFi);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.Thriller)) {
        this.Thriller = data().deepCopy(fields()[21].schema(), other.Thriller);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.War)) {
        this.War = data().deepCopy(fields()[22].schema(), other.War);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.Western)) {
        this.Western = data().deepCopy(fields()[23].schema(), other.Western);
        fieldSetFlags()[23] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MovieModule instance
     * @param other The existing instance to copy.
     */
    private Builder(cn.jiayeli.movieAnalyse.module.MovieModule other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.movieId)) {
        this.movieId = data().deepCopy(fields()[0].schema(), other.movieId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.movieTitle)) {
        this.movieTitle = data().deepCopy(fields()[1].schema(), other.movieTitle);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.releaseDate)) {
        this.releaseDate = data().deepCopy(fields()[2].schema(), other.releaseDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.videoReleaseDate)) {
        this.videoReleaseDate = data().deepCopy(fields()[3].schema(), other.videoReleaseDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.IMDbURL)) {
        this.IMDbURL = data().deepCopy(fields()[4].schema(), other.IMDbURL);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.unknown)) {
        this.unknown = data().deepCopy(fields()[5].schema(), other.unknown);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Action)) {
        this.Action = data().deepCopy(fields()[6].schema(), other.Action);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Adventure)) {
        this.Adventure = data().deepCopy(fields()[7].schema(), other.Adventure);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Animation)) {
        this.Animation = data().deepCopy(fields()[8].schema(), other.Animation);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.Childrens)) {
        this.Childrens = data().deepCopy(fields()[9].schema(), other.Childrens);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.Comedy)) {
        this.Comedy = data().deepCopy(fields()[10].schema(), other.Comedy);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.Crime)) {
        this.Crime = data().deepCopy(fields()[11].schema(), other.Crime);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.Documentary)) {
        this.Documentary = data().deepCopy(fields()[12].schema(), other.Documentary);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.Drama)) {
        this.Drama = data().deepCopy(fields()[13].schema(), other.Drama);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.Fantasy)) {
        this.Fantasy = data().deepCopy(fields()[14].schema(), other.Fantasy);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.FilmNoir)) {
        this.FilmNoir = data().deepCopy(fields()[15].schema(), other.FilmNoir);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.Horror)) {
        this.Horror = data().deepCopy(fields()[16].schema(), other.Horror);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.Musical)) {
        this.Musical = data().deepCopy(fields()[17].schema(), other.Musical);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.Mystery)) {
        this.Mystery = data().deepCopy(fields()[18].schema(), other.Mystery);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.Romance)) {
        this.Romance = data().deepCopy(fields()[19].schema(), other.Romance);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.SciFi)) {
        this.SciFi = data().deepCopy(fields()[20].schema(), other.SciFi);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.Thriller)) {
        this.Thriller = data().deepCopy(fields()[21].schema(), other.Thriller);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.War)) {
        this.War = data().deepCopy(fields()[22].schema(), other.War);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.Western)) {
        this.Western = data().deepCopy(fields()[23].schema(), other.Western);
        fieldSetFlags()[23] = true;
      }
    }

    /**
      * Gets the value of the 'movieId' field.
      * @return The value.
      */
    public java.lang.String getMovieId() {
      return movieId;
    }

    /**
      * Sets the value of the 'movieId' field.
      * @param value The value of 'movieId'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setMovieId(java.lang.String value) {
      validate(fields()[0], value);
      this.movieId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'movieId' field has been set.
      * @return True if the 'movieId' field has been set, false otherwise.
      */
    public boolean hasMovieId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'movieId' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearMovieId() {
      movieId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'movieTitle' field.
      * @return The value.
      */
    public java.lang.String getMovieTitle() {
      return movieTitle;
    }

    /**
      * Sets the value of the 'movieTitle' field.
      * @param value The value of 'movieTitle'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setMovieTitle(java.lang.String value) {
      validate(fields()[1], value);
      this.movieTitle = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'movieTitle' field has been set.
      * @return True if the 'movieTitle' field has been set, false otherwise.
      */
    public boolean hasMovieTitle() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'movieTitle' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearMovieTitle() {
      movieTitle = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'releaseDate' field.
      * @return The value.
      */
    public java.lang.String getReleaseDate() {
      return releaseDate;
    }

    /**
      * Sets the value of the 'releaseDate' field.
      * @param value The value of 'releaseDate'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setReleaseDate(java.lang.String value) {
      validate(fields()[2], value);
      this.releaseDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'releaseDate' field has been set.
      * @return True if the 'releaseDate' field has been set, false otherwise.
      */
    public boolean hasReleaseDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'releaseDate' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearReleaseDate() {
      releaseDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'videoReleaseDate' field.
      * @return The value.
      */
    public java.lang.String getVideoReleaseDate() {
      return videoReleaseDate;
    }

    /**
      * Sets the value of the 'videoReleaseDate' field.
      * @param value The value of 'videoReleaseDate'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setVideoReleaseDate(java.lang.String value) {
      validate(fields()[3], value);
      this.videoReleaseDate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'videoReleaseDate' field has been set.
      * @return True if the 'videoReleaseDate' field has been set, false otherwise.
      */
    public boolean hasVideoReleaseDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'videoReleaseDate' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearVideoReleaseDate() {
      videoReleaseDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'IMDbURL' field.
      * @return The value.
      */
    public java.lang.String getIMDbURL() {
      return IMDbURL;
    }

    /**
      * Sets the value of the 'IMDbURL' field.
      * @param value The value of 'IMDbURL'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setIMDbURL(java.lang.String value) {
      validate(fields()[4], value);
      this.IMDbURL = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'IMDbURL' field has been set.
      * @return True if the 'IMDbURL' field has been set, false otherwise.
      */
    public boolean hasIMDbURL() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'IMDbURL' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearIMDbURL() {
      IMDbURL = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'unknown' field.
      * @return The value.
      */
    public java.lang.String getUnknown() {
      return unknown;
    }

    /**
      * Sets the value of the 'unknown' field.
      * @param value The value of 'unknown'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setUnknown(java.lang.String value) {
      validate(fields()[5], value);
      this.unknown = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'unknown' field has been set.
      * @return True if the 'unknown' field has been set, false otherwise.
      */
    public boolean hasUnknown() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'unknown' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearUnknown() {
      unknown = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'Action' field.
      * @return The value.
      */
    public java.lang.String getAction() {
      return Action;
    }

    /**
      * Sets the value of the 'Action' field.
      * @param value The value of 'Action'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setAction(java.lang.String value) {
      validate(fields()[6], value);
      this.Action = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'Action' field has been set.
      * @return True if the 'Action' field has been set, false otherwise.
      */
    public boolean hasAction() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'Action' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearAction() {
      Action = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'Adventure' field.
      * @return The value.
      */
    public java.lang.String getAdventure() {
      return Adventure;
    }

    /**
      * Sets the value of the 'Adventure' field.
      * @param value The value of 'Adventure'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setAdventure(java.lang.String value) {
      validate(fields()[7], value);
      this.Adventure = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'Adventure' field has been set.
      * @return True if the 'Adventure' field has been set, false otherwise.
      */
    public boolean hasAdventure() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'Adventure' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearAdventure() {
      Adventure = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'Animation' field.
      * @return The value.
      */
    public java.lang.String getAnimation() {
      return Animation;
    }

    /**
      * Sets the value of the 'Animation' field.
      * @param value The value of 'Animation'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setAnimation(java.lang.String value) {
      validate(fields()[8], value);
      this.Animation = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'Animation' field has been set.
      * @return True if the 'Animation' field has been set, false otherwise.
      */
    public boolean hasAnimation() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'Animation' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearAnimation() {
      Animation = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'Childrens' field.
      * @return The value.
      */
    public java.lang.String getChildrens() {
      return Childrens;
    }

    /**
      * Sets the value of the 'Childrens' field.
      * @param value The value of 'Childrens'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setChildrens(java.lang.String value) {
      validate(fields()[9], value);
      this.Childrens = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'Childrens' field has been set.
      * @return True if the 'Childrens' field has been set, false otherwise.
      */
    public boolean hasChildrens() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'Childrens' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearChildrens() {
      Childrens = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'Comedy' field.
      * @return The value.
      */
    public java.lang.String getComedy() {
      return Comedy;
    }

    /**
      * Sets the value of the 'Comedy' field.
      * @param value The value of 'Comedy'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setComedy(java.lang.String value) {
      validate(fields()[10], value);
      this.Comedy = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'Comedy' field has been set.
      * @return True if the 'Comedy' field has been set, false otherwise.
      */
    public boolean hasComedy() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'Comedy' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearComedy() {
      Comedy = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'Crime' field.
      * @return The value.
      */
    public java.lang.String getCrime() {
      return Crime;
    }

    /**
      * Sets the value of the 'Crime' field.
      * @param value The value of 'Crime'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setCrime(java.lang.String value) {
      validate(fields()[11], value);
      this.Crime = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'Crime' field has been set.
      * @return True if the 'Crime' field has been set, false otherwise.
      */
    public boolean hasCrime() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'Crime' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearCrime() {
      Crime = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'Documentary' field.
      * @return The value.
      */
    public java.lang.String getDocumentary() {
      return Documentary;
    }

    /**
      * Sets the value of the 'Documentary' field.
      * @param value The value of 'Documentary'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setDocumentary(java.lang.String value) {
      validate(fields()[12], value);
      this.Documentary = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'Documentary' field has been set.
      * @return True if the 'Documentary' field has been set, false otherwise.
      */
    public boolean hasDocumentary() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'Documentary' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearDocumentary() {
      Documentary = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'Drama' field.
      * @return The value.
      */
    public java.lang.String getDrama() {
      return Drama;
    }

    /**
      * Sets the value of the 'Drama' field.
      * @param value The value of 'Drama'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setDrama(java.lang.String value) {
      validate(fields()[13], value);
      this.Drama = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'Drama' field has been set.
      * @return True if the 'Drama' field has been set, false otherwise.
      */
    public boolean hasDrama() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'Drama' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearDrama() {
      Drama = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'Fantasy' field.
      * @return The value.
      */
    public java.lang.String getFantasy() {
      return Fantasy;
    }

    /**
      * Sets the value of the 'Fantasy' field.
      * @param value The value of 'Fantasy'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setFantasy(java.lang.String value) {
      validate(fields()[14], value);
      this.Fantasy = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'Fantasy' field has been set.
      * @return True if the 'Fantasy' field has been set, false otherwise.
      */
    public boolean hasFantasy() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'Fantasy' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearFantasy() {
      Fantasy = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'FilmNoir' field.
      * @return The value.
      */
    public java.lang.String getFilmNoir() {
      return FilmNoir;
    }

    /**
      * Sets the value of the 'FilmNoir' field.
      * @param value The value of 'FilmNoir'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setFilmNoir(java.lang.String value) {
      validate(fields()[15], value);
      this.FilmNoir = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'FilmNoir' field has been set.
      * @return True if the 'FilmNoir' field has been set, false otherwise.
      */
    public boolean hasFilmNoir() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'FilmNoir' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearFilmNoir() {
      FilmNoir = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'Horror' field.
      * @return The value.
      */
    public java.lang.String getHorror() {
      return Horror;
    }

    /**
      * Sets the value of the 'Horror' field.
      * @param value The value of 'Horror'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setHorror(java.lang.String value) {
      validate(fields()[16], value);
      this.Horror = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'Horror' field has been set.
      * @return True if the 'Horror' field has been set, false otherwise.
      */
    public boolean hasHorror() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'Horror' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearHorror() {
      Horror = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'Musical' field.
      * @return The value.
      */
    public java.lang.String getMusical() {
      return Musical;
    }

    /**
      * Sets the value of the 'Musical' field.
      * @param value The value of 'Musical'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setMusical(java.lang.String value) {
      validate(fields()[17], value);
      this.Musical = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'Musical' field has been set.
      * @return True if the 'Musical' field has been set, false otherwise.
      */
    public boolean hasMusical() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'Musical' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearMusical() {
      Musical = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'Mystery' field.
      * @return The value.
      */
    public java.lang.String getMystery() {
      return Mystery;
    }

    /**
      * Sets the value of the 'Mystery' field.
      * @param value The value of 'Mystery'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setMystery(java.lang.String value) {
      validate(fields()[18], value);
      this.Mystery = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'Mystery' field has been set.
      * @return True if the 'Mystery' field has been set, false otherwise.
      */
    public boolean hasMystery() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'Mystery' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearMystery() {
      Mystery = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'Romance' field.
      * @return The value.
      */
    public java.lang.String getRomance() {
      return Romance;
    }

    /**
      * Sets the value of the 'Romance' field.
      * @param value The value of 'Romance'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setRomance(java.lang.String value) {
      validate(fields()[19], value);
      this.Romance = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'Romance' field has been set.
      * @return True if the 'Romance' field has been set, false otherwise.
      */
    public boolean hasRomance() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'Romance' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearRomance() {
      Romance = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'SciFi' field.
      * @return The value.
      */
    public java.lang.String getSciFi() {
      return SciFi;
    }

    /**
      * Sets the value of the 'SciFi' field.
      * @param value The value of 'SciFi'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setSciFi(java.lang.String value) {
      validate(fields()[20], value);
      this.SciFi = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'SciFi' field has been set.
      * @return True if the 'SciFi' field has been set, false otherwise.
      */
    public boolean hasSciFi() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'SciFi' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearSciFi() {
      SciFi = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'Thriller' field.
      * @return The value.
      */
    public java.lang.String getThriller() {
      return Thriller;
    }

    /**
      * Sets the value of the 'Thriller' field.
      * @param value The value of 'Thriller'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setThriller(java.lang.String value) {
      validate(fields()[21], value);
      this.Thriller = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'Thriller' field has been set.
      * @return True if the 'Thriller' field has been set, false otherwise.
      */
    public boolean hasThriller() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'Thriller' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearThriller() {
      Thriller = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'War' field.
      * @return The value.
      */
    public java.lang.String getWar() {
      return War;
    }

    /**
      * Sets the value of the 'War' field.
      * @param value The value of 'War'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setWar(java.lang.String value) {
      validate(fields()[22], value);
      this.War = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'War' field has been set.
      * @return True if the 'War' field has been set, false otherwise.
      */
    public boolean hasWar() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'War' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearWar() {
      War = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'Western' field.
      * @return The value.
      */
    public java.lang.String getWestern() {
      return Western;
    }

    /**
      * Sets the value of the 'Western' field.
      * @param value The value of 'Western'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder setWestern(java.lang.String value) {
      validate(fields()[23], value);
      this.Western = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'Western' field has been set.
      * @return True if the 'Western' field has been set, false otherwise.
      */
    public boolean hasWestern() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'Western' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.MovieModule.Builder clearWestern() {
      Western = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MovieModule build() {
      try {
        MovieModule record = new MovieModule();
        record.movieId = fieldSetFlags()[0] ? this.movieId : (java.lang.String) defaultValue(fields()[0]);
        record.movieTitle = fieldSetFlags()[1] ? this.movieTitle : (java.lang.String) defaultValue(fields()[1]);
        record.releaseDate = fieldSetFlags()[2] ? this.releaseDate : (java.lang.String) defaultValue(fields()[2]);
        record.videoReleaseDate = fieldSetFlags()[3] ? this.videoReleaseDate : (java.lang.String) defaultValue(fields()[3]);
        record.IMDbURL = fieldSetFlags()[4] ? this.IMDbURL : (java.lang.String) defaultValue(fields()[4]);
        record.unknown = fieldSetFlags()[5] ? this.unknown : (java.lang.String) defaultValue(fields()[5]);
        record.Action = fieldSetFlags()[6] ? this.Action : (java.lang.String) defaultValue(fields()[6]);
        record.Adventure = fieldSetFlags()[7] ? this.Adventure : (java.lang.String) defaultValue(fields()[7]);
        record.Animation = fieldSetFlags()[8] ? this.Animation : (java.lang.String) defaultValue(fields()[8]);
        record.Childrens = fieldSetFlags()[9] ? this.Childrens : (java.lang.String) defaultValue(fields()[9]);
        record.Comedy = fieldSetFlags()[10] ? this.Comedy : (java.lang.String) defaultValue(fields()[10]);
        record.Crime = fieldSetFlags()[11] ? this.Crime : (java.lang.String) defaultValue(fields()[11]);
        record.Documentary = fieldSetFlags()[12] ? this.Documentary : (java.lang.String) defaultValue(fields()[12]);
        record.Drama = fieldSetFlags()[13] ? this.Drama : (java.lang.String) defaultValue(fields()[13]);
        record.Fantasy = fieldSetFlags()[14] ? this.Fantasy : (java.lang.String) defaultValue(fields()[14]);
        record.FilmNoir = fieldSetFlags()[15] ? this.FilmNoir : (java.lang.String) defaultValue(fields()[15]);
        record.Horror = fieldSetFlags()[16] ? this.Horror : (java.lang.String) defaultValue(fields()[16]);
        record.Musical = fieldSetFlags()[17] ? this.Musical : (java.lang.String) defaultValue(fields()[17]);
        record.Mystery = fieldSetFlags()[18] ? this.Mystery : (java.lang.String) defaultValue(fields()[18]);
        record.Romance = fieldSetFlags()[19] ? this.Romance : (java.lang.String) defaultValue(fields()[19]);
        record.SciFi = fieldSetFlags()[20] ? this.SciFi : (java.lang.String) defaultValue(fields()[20]);
        record.Thriller = fieldSetFlags()[21] ? this.Thriller : (java.lang.String) defaultValue(fields()[21]);
        record.War = fieldSetFlags()[22] ? this.War : (java.lang.String) defaultValue(fields()[22]);
        record.Western = fieldSetFlags()[23] ? this.Western : (java.lang.String) defaultValue(fields()[23]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MovieModule>
    WRITER$ = (org.apache.avro.io.DatumWriter<MovieModule>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MovieModule>
    READER$ = (org.apache.avro.io.DatumReader<MovieModule>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override
  public String toString() {
    return "MovieModule{" +
            "movieId=" + movieId +
            ", movieTitle=" + movieTitle +
            ", releaseDate=" + releaseDate +
            ", videoReleaseDate=" + videoReleaseDate +
            ", IMDbURL=" + IMDbURL +
            ", unknown=" + unknown +
            ", Action=" + Action +
            ", Adventure=" + Adventure +
            ", Animation=" + Animation +
            ", Childrens=" + Childrens +
            ", Comedy=" + Comedy +
            ", Crime=" + Crime +
            ", Documentary=" + Documentary +
            ", Drama=" + Drama +
            ", Fantasy=" + Fantasy +
            ", FilmNoir=" + FilmNoir +
            ", Horror=" + Horror +
            ", Musical=" + Musical +
            ", Mystery=" + Mystery +
            ", Romance=" + Romance +
            ", SciFi=" + SciFi +
            ", Thriller=" + Thriller +
            ", War=" + War +
            ", Western=" + Western +
            '}';
  }
}
