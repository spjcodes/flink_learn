/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package cn.jiayeli.movieAnalyse.module;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UserModule extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1025833007578063690L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserModule\",\"namespace\":\"cn.jiayeli.movieAnalyse.module\",\"fields\":[{\"name\":\"userId\",\"type\":\"string\"},{\"name\":\"age\",\"type\":\"string\"},{\"name\":\"gender\",\"type\":\"string\"},{\"name\":\"occupation\",\"type\":\"string\"},{\"name\":\"zipCode\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UserModule> ENCODER =
      new BinaryMessageEncoder<UserModule>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserModule> DECODER =
      new BinaryMessageDecoder<UserModule>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<UserModule> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<UserModule> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<UserModule>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this UserModule to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a UserModule from a ByteBuffer. */
  public static UserModule fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence userId;
  @Deprecated public java.lang.CharSequence age;
  @Deprecated public java.lang.CharSequence gender;
  @Deprecated public java.lang.CharSequence occupation;
  @Deprecated public java.lang.CharSequence zipCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserModule() {}

  /**
   * All-args constructor.
   * @param userId The new value for userId
   * @param age The new value for age
   * @param gender The new value for gender
   * @param occupation The new value for occupation
   * @param zipCode The new value for zipCode
   */
  public UserModule(java.lang.CharSequence userId, java.lang.CharSequence age, java.lang.CharSequence gender, java.lang.CharSequence occupation, java.lang.CharSequence zipCode) {
    this.userId = userId;
    this.age = age;
    this.gender = gender;
    this.occupation = occupation;
    this.zipCode = zipCode;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return userId;
    case 1: return age;
    case 2: return gender;
    case 3: return occupation;
    case 4: return zipCode;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: userId = (java.lang.CharSequence)value$; break;
    case 1: age = (java.lang.CharSequence)value$; break;
    case 2: gender = (java.lang.CharSequence)value$; break;
    case 3: occupation = (java.lang.CharSequence)value$; break;
    case 4: zipCode = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'userId' field.
   * @return The value of the 'userId' field.
   */
  public java.lang.CharSequence getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.CharSequence value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return The value of the 'age' field.
   */
  public java.lang.CharSequence getAge() {
    return age;
  }

  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(java.lang.CharSequence value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'gender' field.
   * @return The value of the 'gender' field.
   */
  public java.lang.CharSequence getGender() {
    return gender;
  }

  /**
   * Sets the value of the 'gender' field.
   * @param value the value to set.
   */
  public void setGender(java.lang.CharSequence value) {
    this.gender = value;
  }

  /**
   * Gets the value of the 'occupation' field.
   * @return The value of the 'occupation' field.
   */
  public java.lang.CharSequence getOccupation() {
    return occupation;
  }

  /**
   * Sets the value of the 'occupation' field.
   * @param value the value to set.
   */
  public void setOccupation(java.lang.CharSequence value) {
    this.occupation = value;
  }

  /**
   * Gets the value of the 'zipCode' field.
   * @return The value of the 'zipCode' field.
   */
  public java.lang.CharSequence getZipCode() {
    return zipCode;
  }

  /**
   * Sets the value of the 'zipCode' field.
   * @param value the value to set.
   */
  public void setZipCode(java.lang.CharSequence value) {
    this.zipCode = value;
  }

  /**
   * Creates a new UserModule RecordBuilder.
   * @return A new UserModule RecordBuilder
   */
  public static cn.jiayeli.movieAnalyse.module.UserModule.Builder newBuilder() {
    return new cn.jiayeli.movieAnalyse.module.UserModule.Builder();
  }

  /**
   * Creates a new UserModule RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserModule RecordBuilder
   */
  public static cn.jiayeli.movieAnalyse.module.UserModule.Builder newBuilder(cn.jiayeli.movieAnalyse.module.UserModule.Builder other) {
    return new cn.jiayeli.movieAnalyse.module.UserModule.Builder(other);
  }

  /**
   * Creates a new UserModule RecordBuilder by copying an existing UserModule instance.
   * @param other The existing instance to copy.
   * @return A new UserModule RecordBuilder
   */
  public static cn.jiayeli.movieAnalyse.module.UserModule.Builder newBuilder(cn.jiayeli.movieAnalyse.module.UserModule other) {
    return new cn.jiayeli.movieAnalyse.module.UserModule.Builder(other);
  }

  /**
   * RecordBuilder for UserModule instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserModule>
    implements org.apache.avro.data.RecordBuilder<UserModule> {

    private java.lang.CharSequence userId;
    private java.lang.CharSequence age;
    private java.lang.CharSequence gender;
    private java.lang.CharSequence occupation;
    private java.lang.CharSequence zipCode;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(cn.jiayeli.movieAnalyse.module.UserModule.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.gender)) {
        this.gender = data().deepCopy(fields()[2].schema(), other.gender);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.occupation)) {
        this.occupation = data().deepCopy(fields()[3].schema(), other.occupation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.zipCode)) {
        this.zipCode = data().deepCopy(fields()[4].schema(), other.zipCode);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing UserModule instance
     * @param other The existing instance to copy.
     */
    private Builder(cn.jiayeli.movieAnalyse.module.UserModule other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.gender)) {
        this.gender = data().deepCopy(fields()[2].schema(), other.gender);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.occupation)) {
        this.occupation = data().deepCopy(fields()[3].schema(), other.occupation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.zipCode)) {
        this.zipCode = data().deepCopy(fields()[4].schema(), other.zipCode);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserId() {
      return userId;
    }

    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.UserModule.Builder setUserId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.userId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.UserModule.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * @return The value.
      */
    public java.lang.CharSequence getAge() {
      return age;
    }

    /**
      * Sets the value of the 'age' field.
      * @param value The value of 'age'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.UserModule.Builder setAge(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.age = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'age' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.UserModule.Builder clearAge() {
      age = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'gender' field.
      * @return The value.
      */
    public java.lang.CharSequence getGender() {
      return gender;
    }

    /**
      * Sets the value of the 'gender' field.
      * @param value The value of 'gender'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.UserModule.Builder setGender(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.gender = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'gender' field has been set.
      * @return True if the 'gender' field has been set, false otherwise.
      */
    public boolean hasGender() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'gender' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.UserModule.Builder clearGender() {
      gender = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'occupation' field.
      * @return The value.
      */
    public java.lang.CharSequence getOccupation() {
      return occupation;
    }

    /**
      * Sets the value of the 'occupation' field.
      * @param value The value of 'occupation'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.UserModule.Builder setOccupation(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.occupation = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'occupation' field has been set.
      * @return True if the 'occupation' field has been set, false otherwise.
      */
    public boolean hasOccupation() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'occupation' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.UserModule.Builder clearOccupation() {
      occupation = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'zipCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getZipCode() {
      return zipCode;
    }

    /**
      * Sets the value of the 'zipCode' field.
      * @param value The value of 'zipCode'.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.UserModule.Builder setZipCode(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.zipCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'zipCode' field has been set.
      * @return True if the 'zipCode' field has been set, false otherwise.
      */
    public boolean hasZipCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'zipCode' field.
      * @return This builder.
      */
    public cn.jiayeli.movieAnalyse.module.UserModule.Builder clearZipCode() {
      zipCode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserModule build() {
      try {
        UserModule record = new UserModule();
        record.userId = fieldSetFlags()[0] ? this.userId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.age = fieldSetFlags()[1] ? this.age : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.gender = fieldSetFlags()[2] ? this.gender : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.occupation = fieldSetFlags()[3] ? this.occupation : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.zipCode = fieldSetFlags()[4] ? this.zipCode : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserModule>
    WRITER$ = (org.apache.avro.io.DatumWriter<UserModule>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserModule>
    READER$ = (org.apache.avro.io.DatumReader<UserModule>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
